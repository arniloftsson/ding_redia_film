<?php

/**
 * @file
 * Handles film from the libry film service.
 */


function ding_redia_film_menu()
{
  $items = array();

  $items['film/redia'] = array(
    'title' => 'Redia Film',
    'page callback' => 'ding_redia_film_render',
    'access arguments' => array('access content'),
  );

  $items['film/redia/%'] = array(
    'title' => 'Redia Film',
    'page callback' => 'ding_redia_film_render_film',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
  );

  $items['film/redia/authenticate'] = array(
    'title' => 'Redia Film Authenticate',
    'page callback' => 'ding_redia_film_authenticate',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

function ding_redia_film_render()
{
  $login_url = ding_redia_film_login_url();
  $agency = variable_get('ting_agency', '');
  $options = ' loginurl: "' . $login_url . '", agency: "' . $agency . '"';

  $content = '
  <div id="root"></div>
  <script
    crossorigin
    src="https://unpkg.com/react@17/umd/react.production.min.js"
    ></script>
    <script
    crossorigin
      src="https://unpkg.com/react-dom@17/umd/react-dom.production.min.js"
      ></script>
      <script
    type="module"
      src="https://film.libry.dk/libry-film-widget-app.umd.js"
      ></script>
      <script>
    window.addEventListener("DOMContentLoaded", (event) => {
    window.LibryFilm.init({ 
      containerId: "root",
      baseUrl: "/film/redia", 
      bappsApiKey: "12481632",
      bappsCustomerId: "bob",' .
    $options . ' 
    });
  });
  </script>
        ';
  return $content;
}

function ding_redia_film_render_film()
{
}

/**
 * Generate a login url which can be used as a prop for React apps.
 *
 * @return string
 *   Login url.
 */
function ding_redia_film_login_url()
{
  return ding_provider_invoke(
    'openplatform_token',
    'login_url',
    ['query' => ['destination' => '']]
  );
}


function ding_redia_film_authenticate($user_id = '')
{
  // Ding Varnish will cache requests even for logged in users. Mark this
  // page as not cacheable to bypass Varnish. Uses should not get each others
  // token due to a cached response.
  drupal_page_is_cacheable(FALSE);
  global $user;

  $status = '';
  $film_service_token = null;
  // Check if the logged in user is a library user.

  if (!user_is_logged_in()) {
    $status = 'not_logged_in';
  } elseif (!ding_user_is_provider_user($user)) {
    $status = 'not_library_user';
  } elseif (module_exists('connie')) {
    //Test 
    $status = 'test';
    $film_service_token = ding_redia_film_handle_authentication("ballerupbib");
  } else {
    $libry_token = ding_redia_film_handle_authentication($user_id);
    if (isset($libry_token)) {
      $status = 'logged_in';
      $film_service_token = $libry_token;
    } else {
      $status = 'no_token';
    }
  }

  $output = array('token' => $film_service_token, 'status' => $status);
  drupal_json_output($output);
}

function ding_redia_film_handle_authentication($user_id)
{
  if (module_exists('connie')) {
    $token = "7425bce6440ce920e8e21d212c3c36c202d35532";
  } else {
    $token = ding_provider_invoke('openplatform_token', 'for_user');
  }
  global $user;
  $creds = ding_user_get_creds();
  //file_put_contents("/var/www/drupalvm/drupal/web/debug/film9.txt", print_r(json_encode($creds, JSON_PRETTY_PRINT), TRUE), FILE_APPEND);
  $libry_token = ding_redia_film_get_film_service_token($token, $user_id);
  return $libry_token;
}

function ding_redia_film_get_film_service_token($token, $user_id)
{
  $libry_token = NULL;
  try {
    $client = new \GuzzleHttp\Client();
    $jar = new \GuzzleHttp\Cookie\CookieJar;

    $options = [
      'json' => [
        "jsonrpc" => "2.0",
        "id" => 1,
        "method" => "watch.webLogin",
        "params" => ["12481632", $user_id, $token]
      ],
      'cookies' => $jar
    ];
    $response = $client->post("https://bapps-be-staging.redia.dk/v2/", $options);
    $content = $response->getBody()->getContents();

    $jar->toArray();

    $json = json_decode($content, true);
    //file_put_contents("/var/www/drupalvm/drupal/web/debug/film7.txt", print_r(json_encode($json, JSON_PRETTY_PRINT), TRUE), FILE_APPEND);
  } catch (Exception $e) {
  }
  return $libry_token;
}


